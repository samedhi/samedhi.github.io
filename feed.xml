<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Unstructured</title>
    <description>A journal of what I am working on and thinking about. I provide here links to every project I work upon. I also periodically review things, and sometimes, if you are good, give my opinion. 
</description>
    <link>http://samedhi.github.io/</link>
    <atom:link href="http://samedhi.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 02 Jan 2018 18:00:33 -0800</pubDate>
    <lastBuildDate>Tue, 02 Jan 2018 18:00:33 -0800</lastBuildDate>
    <generator>Jekyll v3.6.2</generator>
    
      <item>
        <title>Build a CSV in Clojure</title>
        <description>&lt;p&gt;Converting a vector of values to a CSV in pure clojure. Not actually that interesting, just wanted the chance to try out &lt;a href=&quot;https://github.com/viebel/klipse&quot;&gt;klipse&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-klipse&quot;&gt;(ns csv-example.core
  (:require 
    [clojure.string :as string]))

(def csv
  [[&quot;name&quot; &quot;age&quot; &quot;occupation&quot; &quot;gender&quot;]
   [&quot;Peter Pan&quot; 312 &quot;Lost Boy&quot; &quot;male&quot;]
   [&quot;Wendy Darling&quot; 14 &quot;Older Sister&quot; &quot;female&quot;]
   [&quot;Captain Hook&quot; 330 &quot;Pirate&quot; &quot;male&quot;]
   [&quot;Tinker Bell&quot; nil &quot;Fairy&quot; &quot;female&quot;]])

(defn clean-str [s]
  (pr-str (string/replace s &quot;\n&quot; &quot;&quot;)))

(defn build-csv [xs]
  (-&amp;gt;&amp;gt; xs 
    (map (fn [xs] (map #(if (string? %) (clean-str %) %) xs))) ;; quote all strings
    (map (partial string/join &quot;,&quot;)) ;; seq of seq -&amp;gt; seq of strings
    (string/join &quot;\n&quot;))) ;; seq of string -&amp;gt; string

(println (build-csv csv))
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Sat, 23 Dec 2017 00:00:00 -0800</pubDate>
        <link>http://samedhi.github.io/code/2017/12/23/building-csv-in-clojure.html</link>
        <guid isPermaLink="true">http://samedhi.github.io/code/2017/12/23/building-csv-in-clojure.html</guid>
        
        
        <category>code</category>
        
      </item>
    
      <item>
        <title>Pagination on Google App Engine Standard</title>
        <description>&lt;p&gt;Datastore (Google App Engine) does not let you lock the database. So how do you map across every element in Datastore? Here is a very rough and tumble solution to that problem.&lt;/p&gt;

&lt;h3 id=&quot;usage&quot;&gt;Usage&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Assume you have a &lt;code class=&quot;highlighter-rouge&quot;&gt;ndb.Model&lt;/code&gt; named &lt;code class=&quot;highlighter-rouge&quot;&gt;Widget&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Begin pagination using the following (note that &lt;code class=&quot;highlighter-rouge&quot;&gt;Widget&lt;/code&gt; is case sensitive)&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl https://example-domain.appspot.com/paginate/Widget
# =&amp;gt; {'keys': [&amp;lt;URLSAFEKEYS&amp;gt;], 'cursor': &amp;lt;CURSOR_VALUE&amp;gt;}`.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;CURSOR_VALUE&amp;gt;&lt;/code&gt; to continue pagination across all &lt;code class=&quot;highlighter-rouge&quot;&gt;Widget&lt;/code&gt;’s&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl https://example-domain.appspot.com/paginate/Widget/&amp;lt;CURSOR_VALUE&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;code&quot;&gt;Code&lt;/h3&gt;
&lt;script src=&quot;https://gist.github.com/samedhi/ac371892a21bea6fc1f13025320f911f.js&quot;&gt;&lt;/script&gt;

</description>
        <pubDate>Thu, 21 Dec 2017 00:00:00 -0800</pubDate>
        <link>http://samedhi.github.io/code/2017/12/21/paginating-on-app-engine.html</link>
        <guid isPermaLink="true">http://samedhi.github.io/code/2017/12/21/paginating-on-app-engine.html</guid>
        
        
        <category>code</category>
        
      </item>
    
      <item>
        <title>Random crazy</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;Him: “Another museum on it’s way…”&lt;/p&gt;

  &lt;p&gt;Me: “What?”&lt;/p&gt;

  &lt;p&gt;Him: “I mean, if you had an atomic aircraft, where would you park it?”&lt;/p&gt;

  &lt;p&gt;Me: … &amp;lt;few seconds of though&amp;gt; … “Area 51?”&lt;/p&gt;

  &lt;p&gt;Him: Momentary shock registers on his face, skuddles/crab walks away.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Just a random conversation with some of the fairly obviously tweaking tenants in my apartment…&lt;/p&gt;
</description>
        <pubDate>Sat, 22 Jul 2017 00:00:00 -0700</pubDate>
        <link>http://samedhi.github.io/journal/2017/07/22/crazy.html</link>
        <guid isPermaLink="true">http://samedhi.github.io/journal/2017/07/22/crazy.html</guid>
        
        
        <category>journal</category>
        
      </item>
    
      <item>
        <title>Getting better at Math</title>
        <description>&lt;p&gt;I have never been much of an academic. In high school, all my friends were accelerated 1 year and allowed to test out of algebra 2; my scores were too low to allow me to skip it. Not wanting to be left behind, I resolved to take algebra II over summer.&lt;/p&gt;

&lt;p&gt;That was a mistake.&lt;/p&gt;

&lt;p&gt;That Summer I took algebra II with some laughably bad students at an inner city school. It was surreal. We would spend 4 hours a day in class, doing almost no real learning. I believe one kid was actively jerking off in the back of the room. One girl was pregnant and was taking life advice from another teen mother. By the end, we had covered maybe 3 out of 15 chapters. It was a complete failure. Somehow everyone who showed up passed. I later heard that Texas had so many “super seniors” clogging up the system that they created summer classes like this which were guaranteed passes; the goal was not education, the goal was to move people out of the system.&lt;/p&gt;

&lt;p&gt;Like an idiot, I then took my “pass” in algebra II to my own school. I was happy, I could stay with my friends! Mathematically, things quickly fell apart. I realized that I was in over my head. The prospect of admitting that I couldn’t hack it was even worse than my previous fear of being left behind (teen logic at its finest). For the next 3 years, rather than understand anything, I built elaborate workarounds to avoid exposing my ignorance. I didn’t know how to actually solve most problems, I did however understand that my TI-83+ calculator could approximate the solution to most everything. With a little bit of flourish I could provide something that looked like I worked through a problem, despite the fact that the only thing I really had was a solution and an understanding of my calculator.&lt;/p&gt;

&lt;p&gt;I graduated missing around 4 years of high school mathematics.&lt;/p&gt;

&lt;p&gt;I feel like failing to understand some of the basic concepts in Algebra II substantially retarded my progress in mathematics. I lacked the basics that were necessary to move forward.&lt;/p&gt;

&lt;h1 id=&quot;mathematical-learning&quot;&gt;Mathematical Learning&lt;/h1&gt;

&lt;p&gt;The plural of anecdote is not data. With that said, this video resonates with me. I like the idea of mathematics being a small graph of deeply connected nodes. Failing to understand one of the axiomatic/deeply-networked nodes can make understanding the interconnected nodes very difficult.&lt;/p&gt;

&lt;p&gt;Contrast this to history with its much larger number of nodes. These nodes are interconnected, but not as dependent on each other. They might provide context or contrast relative to one another, but they are not &lt;strong&gt;required&lt;/strong&gt; for understanding.&lt;/p&gt;

&lt;p&gt;I though this was an interesting point.&lt;/p&gt;
&lt;div class=&quot;videos&quot;&gt;
  &lt;div class=&quot;video&quot;&gt;
    &lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/M7febmLhS6E?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
  &lt;/div&gt;
&lt;/div&gt;

</description>
        <pubDate>Wed, 19 Jul 2017 00:00:00 -0700</pubDate>
        <link>http://samedhi.github.io/journal/2017/07/19/journal.html</link>
        <guid isPermaLink="true">http://samedhi.github.io/journal/2017/07/19/journal.html</guid>
        
        
        <category>journal</category>
        
      </item>
    
      <item>
        <title>The Million Habits of Highly Ineffective People</title>
        <description>&lt;p&gt;I found the following intriguing because it unified the notion of habits and the notion of self. I have always viewed my habits as external things, there is me and then then there are my habits. Habits are something external to me. “I am attempting to practice the guitar every day.” “I am attempting to give up eating dessert every meal.” I view habits as something outside of myself; something I do with willpower.&lt;/p&gt;

&lt;p&gt;It is a powerful shift in perception to consider that you are a collection of habits. That the emergent notion of you is a complex interweaving of habits; some so fundamental that you have “subsumed” them into your definition of self.&lt;/p&gt;

&lt;p&gt;I find it comforting to consider that all reactions to the world are just a matter of habits. Skills are habits that help you react properly to the world. Addictions are habits that have become too ingrained and lack nuance. All problems can be tackled by thinking of them as habits that need to be internalized (or broken) to allow you to get to your desired outcome.&lt;/p&gt;

&lt;div class=&quot;videos&quot;&gt;
&lt;div class=&quot;video&quot;&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/FtMm88p3Tjk&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
        <pubDate>Tue, 18 Jul 2017 00:00:00 -0700</pubDate>
        <link>http://samedhi.github.io/journal/2017/07/18/journal.html</link>
        <guid isPermaLink="true">http://samedhi.github.io/journal/2017/07/18/journal.html</guid>
        
        
        <category>journal</category>
        
      </item>
    
      <item>
        <title>The Circle Movie</title>
        <description>&lt;p&gt;A “what if” study of a fully connected world.&lt;/p&gt;

&lt;p&gt;The central premise of 2017’s “The Circle” is that the world has been fully connected through a network of always on, always watching, tiny, cheap, inocuous cameras.&lt;/p&gt;

&lt;p&gt;It is technically sci-fi, though all the elements I observed are more than reasonable. More a matter of minitiuarization and falling hardware prices than actual technological breakthroughs.&lt;/p&gt;

&lt;h1 id=&quot;the-good&quot;&gt;The Good&lt;/h1&gt;

&lt;p&gt;I am very forgiving of things that cause me to change my perception, or open me to a new way of thinking. Did this movie have flaws? Absolutely. I’ll get to those later. Let’s talk about what it did well.&lt;/p&gt;

&lt;h2 id=&quot;use-of-a-character-as-a-proxy-for-popular-culture&quot;&gt;Use of a character as a proxy for popular culture&lt;/h2&gt;

&lt;p&gt;Emma Watson went through the stages of acceptance of an omnipotent society in an extremely collapsed timeline. What she did in a matter of months most people in developed nations are still aclimatizing to.&lt;/p&gt;

&lt;p&gt;At one point Tom Hanks turns to her and gets her to “admit” that having experiences that you do not share with others is a form of theft. A form of emotional hording. At this moment in history, such an idea seems ludicrous. Almost perverse. Only celebrities and politicians have no right to privacy? Right?&lt;/p&gt;

&lt;p&gt;I don’t know.&lt;/p&gt;

&lt;p&gt;I am not sure people 15 years from now will agree. How would someone from 15 years ago feel about selfie sticks? Snapchats of your dinner? Tweeting by politicians. Sexting. Facebook friends. Online Dating. Etc. Probably seems pretty ludicrous. Inhuman. Disconnected. Shallow. And yet, here we are.&lt;/p&gt;

&lt;h2 id=&quot;accounting-the-cost-and-benefits-of-omnipotence&quot;&gt;Accounting the cost and benefits of omnipotence&lt;/h2&gt;

&lt;p&gt;Yeah, a lot of great things could occur. From the trivial to the fundamental.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Immediate reactions as machines watching our feeds recognize violence, injury, and danger and automatically notify and dispatch emergency responders.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Automatically and constantly dealing with fundamental weaknesses in society. Making sure that people don’t get too isolated; too lonely. That people who exhibit sighs of mental disorders are regularly visited by health care professionals. Checking in on everyone with the (literal) persistence of a machine.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Violent crime does not make sense. Only physical crime that would still exist would be crimes of passion. Crimes that law enforcement was incapable of negating due to being sudden and unexpected. Although tragic, when a violent crime occurs, it would almost always be evident what occured and who was responsible.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ask yourself? How much would you be willing to give up for such a world?&lt;/p&gt;

&lt;h2 id=&quot;open-goverment&quot;&gt;Open Goverment&lt;/h2&gt;

&lt;p&gt;Movie makes a big deal about having a open (probably puppet) politician.&lt;/p&gt;

&lt;h3 id=&quot;prisons&quot;&gt;Prisons&lt;/h3&gt;
&lt;p&gt;Here is one that I fully agree with. Prisons should be places that have cameras literally everywhere. In a high risk environment like a prison, I would happily trade my privacy for the knowledge that I am not going to be raped or assaulted.&lt;/p&gt;

&lt;h3 id=&quot;police-officers&quot;&gt;Police Officers&lt;/h3&gt;
&lt;p&gt;This is already occuring. I forsee that in the next decade, the cost of insuring a police officer who refuses to wear (and use) a full body camera will be so high that departments will require police officers to have them running at all times.&lt;/p&gt;

&lt;h3 id=&quot;politicians&quot;&gt;Politicians&lt;/h3&gt;
&lt;p&gt;Heh, I don’t know. It would be interesting. Could most of the goverment be entirely opened? Would we allow “black boxes” like the CIA, FBI, NSA, etc? Would it turn out that backroom negotiations by our nations actually do benefit citizens more than they hurt? Would it cut corruption? Hard to say.&lt;/p&gt;

&lt;h1 id=&quot;the-bad&quot;&gt;The Bad&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;What was John Boyega constantly looking at on his phone?&lt;/li&gt;
  &lt;li&gt;Why did John Boyega show her the basement? What was the significance of mentioning the water at the end of the tunnel?&lt;/li&gt;
  &lt;li&gt;What the hell was John Boyega’s problem? Why did he seem to have all this power to do all these things, and he literally just stood around the entire movie doing… what? Waiting for Emma Watson to make a decision about the future of our “omnipotent” distopia/utopia? It made little sense.&lt;/li&gt;
  &lt;li&gt;Software engineers tend to be pretty opinionated. There would be a lot of dissent about some of the things that “Circle” was doing. It was a little unrealistic how “united” (cult like) the “Circle” corporate family was.&lt;/li&gt;
  &lt;li&gt;Ellar Coltrane was a rather odd inclusion. From the scene where he comes to the Circle campus to complain about being a “deer killer” onward, it just didn’t fit.&lt;/li&gt;
  &lt;li&gt;The Ellar Coltrane rising action and denouement was pretty lame.&lt;/li&gt;
  &lt;li&gt;Emma Watson’s transformation from being a skeptic of the omnipotence to a supporter did not really feel earned. Might have played a little more to why she is putting away her previous skepticism and what particular benefits she thinks a fully connected society will bring.&lt;/li&gt;
  &lt;li&gt;Honestly, too many ideas, not enough time to give each of them their own merrit. This is a difficult and multifaceted question with most of its sharp corners filled down.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;conclusion-spoil-the-last-scene-in-the-movie-here&quot;&gt;Conclusion (spoil the last scene in the movie here)&lt;/h1&gt;

&lt;p&gt;Yes, it has some serious flaws. But it gives you things to think about, and it honestly resolved the ending in a rather novel way. Rather than fighting the system, Emma Watson instead fully opens and embraces it. Basically making the case that if such a system exist, it needs to be placed under open rather closed controlers.&lt;/p&gt;

&lt;p&gt;If you are going to have a system that is going to audit the world, then you must audit everyone in control of that system.&lt;/p&gt;

&lt;div class=&quot;videos&quot;&gt;
&lt;div class=&quot;video&quot;&gt;
&lt;img src=&quot;/assets/The_Circle_(2017_film).png&quot; /&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
        <pubDate>Sun, 30 Apr 2017 00:00:00 -0700</pubDate>
        <link>http://samedhi.github.io/review/movie/2017/04/30/the-circle-movie.html</link>
        <guid isPermaLink="true">http://samedhi.github.io/review/movie/2017/04/30/the-circle-movie.html</guid>
        
        
        <category>review</category>
        
        <category>movie</category>
        
      </item>
    
      <item>
        <title>Clojurewest 2017</title>
        <description>&lt;p&gt;I went to clojurewest 2017 in Portland, Oregon. Good conference, lots of good information. Here are my observations, my notes, and a few pictures.&lt;/p&gt;

&lt;h1 id=&quot;the-good&quot;&gt;The Good&lt;/h1&gt;

&lt;p&gt;The conference was well managed. The talks were mosty interesting. The community continues to be friendly, open, and inclusive.&lt;/p&gt;

&lt;h1 id=&quot;the-bad&quot;&gt;The Bad&lt;/h1&gt;

&lt;p&gt;I wish there had been a few more “This is something I worked on that is very cool” type presentations, but you can’t force those. Maybe there just wasn’t as much cool stuff in 2017 compared to previous years. I guess every year can’t be a “Clojure now compiles to javascript” or “core.async, use it” kind of year.&lt;/p&gt;

&lt;h1 id=&quot;the-city&quot;&gt;The City&lt;/h1&gt;

&lt;p&gt;Portland is an interesting city. I didn’t actually realize how small and walkable the core of the city is. In San Francisco, I have practially forgotten what it is to see families with kids on the street. It is certainly a nice place to visit. I liked the eating, the literary/craft tradition, the beer, and the people. It did have a number of younger homeless (kind of reminded me of Berkeley). It did have the feeling of a place that gets a lot of tourist (that can be tiring when you live there). I could see myself being very happy there, but I haven’t heard a whole lot about the tech scene there. The public transportation is excellent and the lack of traffic is a pleasure. I don’t know if it is a place to “see and be seen” but it certainly felt like a place to “live and let live”. Kind of like the kind of “weird” that Austin aspires to.&lt;/p&gt;

&lt;h1 id=&quot;the-pictures&quot;&gt;The Pictures&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://goo.gl/photos/cEtsG3qSKEWDtKeY9&quot;&gt; Clojure/West 2017 &lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;the-notes&quot;&gt;The Notes&lt;/h1&gt;

&lt;h4 id=&quot;coreasync-in-use----timothy-balridge---coreasync&quot;&gt;Core.Async in Use  - Timothy Balridge - core.async&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Count  is O(n) on a concat, as concat is lazy and only closes over two collections&lt;/li&gt;
  &lt;li&gt;Recommends understanding transducers if you are going to continue using core.async.&lt;/li&gt;
  &lt;li&gt;If you are going to use async code, then consider writing a framework such that the asynchronous code is hidden from the user.&lt;/li&gt;
  &lt;li&gt;High Level:
    &lt;ul&gt;
      &lt;li&gt;Keep userspace code pure&lt;/li&gt;
      &lt;li&gt;Move complexity out of user space&lt;/li&gt;
      &lt;li&gt;Make dependencies explicit&lt;/li&gt;
      &lt;li&gt;Leverage this for easier testing&lt;/li&gt;
      &lt;li&gt;Use core.async to enable cleaner abstraction, not as an end in itself.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;with-great-composition-comes-great-responsibility---elizabeth-engelman&quot;&gt;With Great Composition Comes Great Responsibility - Elizabeth Engelman&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Datomic data is immutable&lt;/li&gt;
  &lt;li&gt;Datomic is ACID&lt;/li&gt;
  &lt;li&gt;Datomic is very flexible&lt;/li&gt;
  &lt;li&gt;You can of course just concat if you want to put where clauses together&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;using-spec-to-transparently-replace-a-legacy-system---daniel-solano-gómez&quot;&gt;Using spec to Transparently Replace a Legacy System - Daniel Solano Gómez&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Capture a day’s worth GET and generate specs for them. Now you can generate inputs used on your system automatically.&lt;/li&gt;
  &lt;li&gt;Maybe this is an example of actually being able to do full rewrites. If you have a endpoint system than you should be able to replace it by specing it out.&lt;/li&gt;
  &lt;li&gt;In a odd way, kind of another argument to keep the API of your old customers live. Even if you do upgrade the code, be sure to have a backwards version of the API that older customers can continue using forever.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;testing-made-simple---tony-kay&quot;&gt;Testing Made Simple - Tony Kay&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;In order to test something, you often end up writing a second version (generative).&lt;/li&gt;
  &lt;li&gt;General principles
    &lt;ul&gt;
      &lt;li&gt;Don’t clump&lt;/li&gt;
      &lt;li&gt;Don’t involve more than 2 layers at once&lt;/li&gt;
      &lt;li&gt;Name the thing under test and use a “sentence completion” around each test&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Design is more important than most things. If you ever say that your design is really hard to test, then that probably means your design is bad.&lt;/li&gt;
  &lt;li&gt;When testing macros in can often be beneficial to use clojure.spec to write conformance. Macros should be tested for the actual code transformations, not for the side effect, that way lies madness.&lt;/li&gt;
  &lt;li&gt;https://github.com/untangled-web/untangled-spec&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;practical-clojure-profiling-in-production---gregory-sizemore&quot;&gt;Practical Clojure Profiling in Production - Gregory Sizemore&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;YourKit - Great for profiling&lt;/li&gt;
  &lt;li&gt;You should profile on production data!&lt;/li&gt;
  &lt;li&gt;Reflection is really slow
    &lt;ul&gt;
      &lt;li&gt;Usually does not matter&lt;/li&gt;
      &lt;li&gt;Type hints can help&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Criterium - benchmarking library for clojure&lt;/li&gt;
  &lt;li&gt;Be sure to measure and RECORD every time. You need to be able to “remember” what the performance measures were previously. Don’t rely on yourself remembering how long things took. (NewRelic is recommended)
    &lt;ul&gt;
      &lt;li&gt;Clj-newrelic - gives you a macro that lets you easily trace functions&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;navigating-clojurescripts-fire-swamps---peter-schuck&quot;&gt;Navigating ClojureScript’s Fire Swamps - Peter Schuck&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;:infer-externs true&lt;/li&gt;
  &lt;li&gt;Library cljs/oops
    &lt;ul&gt;
      &lt;li&gt;Fx oget, oset, ocall, oapply&lt;/li&gt;
      &lt;li&gt;https://github.com/binaryage/cljs-oops&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Soft-access ?, punching !,&lt;/li&gt;
  &lt;li&gt;Prefer CLJS library or externs files, when neither exist use clojurescript externs inference or cljs-oops&lt;/li&gt;
  &lt;li&gt;Google closure compiler can now compile node modules
    &lt;ul&gt;
      &lt;li&gt;Npm-deps&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Modules have existed for 2 years! They are really good at splitting. They really suck in terms of all the boilerplate OO code you have to write in order to use them…. Probably still not worth it.
    &lt;ul&gt;
      &lt;li&gt;Library conwip.modules&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;fearless-jvm-lambdas---john-chapin&quot;&gt;Fearless JVM Lambdas - John Chapin&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Austin conference on May 8&lt;/li&gt;
  &lt;li&gt;Backend as a Service: Firebase, Cognito, Auth0&lt;/li&gt;
  &lt;li&gt;Functions as a Service: AWS Lambda, Microsoft Azure FUnctions, Google Cloud Functions (run in response to events)&lt;/li&gt;
  &lt;li&gt;Serverless = Backend as a Service + Frontend as a Service&lt;/li&gt;
  &lt;li&gt;Excellent Serverless use cases
    &lt;ul&gt;
      &lt;li&gt;Latency Tolerance, asynchronous - Data Pipelines&lt;/li&gt;
      &lt;li&gt;Latency tolerant, synchronous - web apps, API’s&lt;/li&gt;
      &lt;li&gt;Glue&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;So if you have to use them, then go ahead and use them.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;solving-problems-declaratively---mark-engelberg&quot;&gt;Solving Problems Declaratively - Mark Engelberg&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Dancing Links (exactly one)
    &lt;ul&gt;
      &lt;li&gt;https://github.com/engelberg/tarantella&lt;/li&gt;
      &lt;li&gt;https://en.wikipedia.org/wiki/Dancing_Links&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Boolean Satisfiability - True/False + logical constraints
    &lt;ul&gt;
      &lt;li&gt;https://github.com/Engelberg/rolling-stones&lt;/li&gt;
      &lt;li&gt;https://en.wikipedia.org/wiki/Boolean_satisfiability_problem&lt;/li&gt;
      &lt;li&gt;Robot Repair - give the gift of Boolean Satisfiability&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Constraint Programming deals with variables that can take on a finite number of integer values, multi-valued variables + logical and arithmetic constraints
    &lt;ul&gt;
      &lt;li&gt;https://en.wikipedia.org/wiki/Constraint_programming&lt;/li&gt;
      &lt;li&gt;https://github.com/aengelberg/loco&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;http://github.com/engelberg/ycover&lt;/li&gt;
  &lt;li&gt;CodeMaster was his previous game&lt;/li&gt;
  &lt;li&gt;You should read more Knuth stuff&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;unsession---spec---alex-miller&quot;&gt;UNSESSION - Spec - Alex Miller&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Just an question answer pairing on spec.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;full-stack-teleport-testing-with-om-next--datomic----antónio-monteiro-mike-kaplinskiy&quot;&gt;Full Stack Teleport Testing with Om Next &amp;amp; Datomic -  António Monteiro, Mike Kaplinskiy&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;At one point they said a parser query can be a mutation? Seems weird.&lt;/li&gt;
  &lt;li&gt;Use integration test for correctness in parallel for load testing&lt;/li&gt;
  &lt;li&gt;Run test in parallel using multiple databases&lt;/li&gt;
  &lt;li&gt;Something about cloning the state of the database so that you can for datomic actions.
    &lt;ul&gt;
      &lt;li&gt;https://github.com/vvvvalvalval/datomock&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Takeways
    &lt;ul&gt;
      &lt;li&gt;Datomic is awesome&lt;/li&gt;
      &lt;li&gt;Homoiconicity&lt;/li&gt;
      &lt;li&gt;Om Next reified state transitions (as data!)&lt;/li&gt;
      &lt;li&gt;Immutability (structural sharing)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;clojurescript-in-your-pocket---dom-kiva-meyer-lily-m-goh&quot;&gt;ClojureScript in Your Pocket - Dom Kiva-Meyer, Lily M. Goh&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;ReactNative - Fast Iterations, Familiarity, Cross-platform, Performance, Large Ecosystem
    &lt;ul&gt;
      &lt;li&gt;Could you only develop ReactNative and just ignore the web&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Expo - Provides additional API’s and allows you to use without needing Mac dependencies. Is somewhat of a “walled garden” of audited features.
    &lt;ul&gt;
      &lt;li&gt;http://graphql.org/&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Graphql voyager
    &lt;ul&gt;
      &lt;li&gt;GraphiQl&lt;/li&gt;
      &lt;li&gt;Lacinia - https://github.com/walmartlabs/lacinia&lt;/li&gt;
      &lt;li&gt;Datomic&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Rest - swagger is probably best / graphql tooling so much better
    &lt;ul&gt;
      &lt;li&gt;http://swagger.io/ - Might be good for gaend&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;I still really don’t get how you go about deciding on the schema?&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;power-to-the-mobile-people-clojure-and-graphql---howard-lewis-ship&quot;&gt;Power to the (Mobile) People: Clojure and GraphQL - Howard Lewis Ship&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;GraphQL resultant is the same “shape” as the query&lt;/li&gt;
  &lt;li&gt;Some queries are mutations…&lt;/li&gt;
  &lt;li&gt;SCHEMA defines the data from graphql’s point of view&lt;/li&gt;
  &lt;li&gt;Your job is largely to define functions that handle the different queries&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;its-just-data---bob-calco&quot;&gt;It’s Just Data - Bob Calco&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;These are good slides, you should look at this more&lt;/li&gt;
  &lt;li&gt;A human being with a good visualization can currently understand many things more efficiently than any amount of machine learning.&lt;/li&gt;
  &lt;li&gt;Datomic is a great story for understanding the flows of anything through time, including bad data, which can be important for understanding the worlds understanding through time&lt;/li&gt;
  &lt;li&gt;Datomic does not have a required field for the same reason it does not have a null value.
Irrevocable Trust  are kind of cool.&lt;/li&gt;
  &lt;li&gt;“Objects and entities are total figments of our imaginations”&lt;/li&gt;
  &lt;li&gt;Datomic allows you to simply add attributes as the facts of those models are revealed to you.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;emulators-immutability-and-time-travel---angus-fletcher&quot;&gt;Emulators, Immutability, and Time Travel - Angus Fletcher&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;NES Emulator&lt;/li&gt;
  &lt;li&gt;E.T. almost killed video games&lt;/li&gt;
  &lt;li&gt;Nintendo Entertainment System saved it
** PPU is a fancy clock
    &lt;ul&gt;
      &lt;li&gt;Cycle (vertical) (0-40)&lt;/li&gt;
      &lt;li&gt;Scan Line (Horizontal) (0-261)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Keeping everything in one place (atom) works really well&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;synthesis-and-verification-for-all---emina-torlak&quot;&gt;Synthesis and Verification for All - Emina Torlak&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;A &lt;code class=&quot;highlighter-rouge&quot;&gt;solver-aided tool&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Rusette allows you to implement an interpreter for your language which somehow makes your failing cases pass. I am lost.&lt;/li&gt;
  &lt;li&gt;DSL’s are good because
    &lt;ul&gt;
      &lt;li&gt;They result in less code for humans&lt;/li&gt;
      &lt;li&gt;They have additional constraints that allow tools (like solver-aided languages) that can be exploited.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;The verify logically goes through all paths of the program and ask if any symbolic variables can be given values that cause things to not assert correctly.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 02 Apr 2017 00:00:00 -0700</pubDate>
        <link>http://samedhi.github.io/travel/vacation/2017/04/02/clojurewest-2017.html</link>
        <guid isPermaLink="true">http://samedhi.github.io/travel/vacation/2017/04/02/clojurewest-2017.html</guid>
        
        
        <category>travel</category>
        
        <category>vacation</category>
        
      </item>
    
      <item>
        <title>Japan Travel Log</title>
        <description>&lt;p&gt;I took a 3 week trip to Japan from January 21 from February 12. I didn’t have an itinerary, exploring as I saw fit and moving on when the mood struck me. Through the trip, I stayed in Tokyo, Tanabechuo, Kyoto, Osaka, Hiroshima, and Nagasaki.&lt;/p&gt;

&lt;h1 id=&quot;purchases&quot;&gt;Purchases&lt;/h1&gt;

&lt;p&gt;I made several purchases before the trip:&lt;/p&gt;

&lt;h2 id=&quot;japan-rail-pass&quot;&gt;Japan Rail Pass&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&quot;http://www.japanrailpass.net/en/&quot;&gt;Japan Rail Pass&lt;/a&gt; (Green) is a Japan Rail (JR) pass that lets you ride most trains in Japan. My most “Japan specific” purchase that I would recommend to anyone.  The (Green) designation means that it is business class (effectively), which means better seats and reservations. I bought the 21 day pass for $700.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;You have to buy this pass outside of Japan! It is only available to tourist to Japan. Purchase it before you leave, activate it when you get there.&lt;/li&gt;
  &lt;li&gt;This pass lets you ride most intercity trains at no cost. Intracity trains probably are not covered, but they are around $2.&lt;/li&gt;
  &lt;li&gt;You can save a little money by NOT using the pass and instead buying the tickets at the station. You can also of course pay less if you take a slower train or a less desirable route. It is up to you to decide whether this is worth your time.&lt;/li&gt;
  &lt;li&gt;The pass is the ultimate in flexibility. Just walk up to any JR office and tell them where you want to end up. They book all connecting trains for you then and there. They book you on the next (could be in 5 minutes) train that will get you there as fast as possible. If you have the Green pass they also reserve a seat for you on almost all trains. It is just so easy. You don’t need to read local maps, you don’t need to plan ahead, just point on your phone where you want to end up.&lt;/li&gt;
  &lt;li&gt;I think I basically broke even, but you could go wild on this thing and take a JR trip every day. It is really unlimited.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;google-fi&quot;&gt;Google Fi&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://fi.google.com/account&quot;&gt;Google Fi&lt;/a&gt; worked out normally. When I landed in Japan it told me that I would pay the standard $10/gig data rate and I believe $0.20/minute. Use your Wifi call if at all possible. Coverage seemed pretty good everywhere. Was able to use it on most of the high speed trains, spotty between Hiroshima and Nagasaki.&lt;/p&gt;

&lt;h2 id=&quot;tortuga-outbreaker&quot;&gt;Tortuga Outbreaker&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&quot;http://www.tortugabackpacks.com/products/outbreaker-travel-backpack?variant=26900597257&quot;&gt;Tortuga Outbreaker 35L&lt;/a&gt; was a altogether worthwhile purchase. Most compeling features is the ability to open it fully (not just from the top) like a conventional suitcase. You don’t think about it, but not having to pack and unpack your backpack is a real time saver. I also thought the compartment for the laptop with easy access was convenient, as you will be taking that out on a regular basis throughout the day.&lt;/p&gt;

&lt;p&gt;Other feature true of the 35L is that it counts as cary on in all airlines (even small planes). It is convenient not having to wait for any lugage after a long day of travel.&lt;/p&gt;

&lt;h2 id=&quot;hostelworldcom&quot;&gt;hostelworld.com&lt;/h2&gt;
&lt;p&gt;I used &lt;a href=&quot;http://www.hostelworld.com&quot;&gt;hostelworld.com&lt;/a&gt;. Easy to use website. Clean interface. I would book my next hostel 5 days before actually arriving. Never had a single issue. They take I think like 10% as deposit on booking, you then pay the rest upon arrival at the hostel.&lt;/p&gt;

&lt;h2 id=&quot;bose-quietcomfort-35&quot;&gt;Bose QuietComfort 35&lt;/h2&gt;
&lt;p&gt;I recently bought some &lt;a href=&quot;https://www.amazon.com/gp/product/B01E3SNO1G/ref=od_aui_detailpages00?ie=UTF8&amp;amp;psc=1&quot;&gt;Bose QuietComfort 35&lt;/a&gt; headphones for work. This is my best product purchase of 2016. They made air travel more pleasant (shut that baby up!). They made watching the landscape flow by on the trains more moody. They gave me a slight taste of home when I am feeling a bit lonely. Seriously. Great. Headphones.&lt;/p&gt;

&lt;p&gt;And now, without further ado, I present… a silly number of pictures:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://goo.gl/photos/fdDnUnDoavoA3hsy5&quot;&gt;Week 1 in Japan&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://goo.gl/photos/zrNuvykfDY7UHvfJ6&quot;&gt;Week 2 in Japan&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://goo.gl/photos/tuE7sXueUj56cHJF9&quot;&gt;Week 3 in Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 14 Feb 2017 00:00:00 -0800</pubDate>
        <link>http://samedhi.github.io/travel/vacation/2017/02/14/japan-travel-log.html</link>
        <guid isPermaLink="true">http://samedhi.github.io/travel/vacation/2017/02/14/japan-travel-log.html</guid>
        
        
        <category>travel</category>
        
        <category>vacation</category>
        
      </item>
    
      <item>
        <title>Soft Scan On Google App Engine</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://cloud.google.com/appengine/&quot;&gt;Google App Engine&lt;/a&gt; does not allow for a &lt;a href=&quot;https://en.wikipedia.org/wiki/Full_table_scan&quot;&gt;SCAN&lt;/a&gt; like operation on a &lt;code class=&quot;highlighter-rouge&quot;&gt;kind&lt;/code&gt;. Although this is a hard limit, it can be worked around with some thought. This is my generic solution.&lt;/p&gt;

&lt;h2 id=&quot;considerations&quot;&gt;Considerations&lt;/h2&gt;
&lt;p&gt;GAE does not allow locking of the database. GAE does not even allow for locking of a &lt;code class=&quot;highlighter-rouge&quot;&gt;kind&lt;/code&gt;. Transactions are the only locking mechanism in GAE, and they are limited to the entity groups within the transaction.&lt;/p&gt;

&lt;p&gt;The closest GAE has to a scan (a lock of a &lt;code class=&quot;highlighter-rouge&quot;&gt;kind&lt;/code&gt;, where every element of that &lt;code class=&quot;highlighter-rouge&quot;&gt;kind&lt;/code&gt; is processed) is a GAE Query; which is a filtered iterator. Queries are “best effort” and are not guaranteed to reflect the current state of the database. Still, they are the best you have.&lt;/p&gt;

&lt;p&gt;Using a iterator would be a O(N) cost, where N is the number of rows of a GAE &lt;code class=&quot;highlighter-rouge&quot;&gt;kind&lt;/code&gt; . GAE is all about scaling dynamically. It would be nice if we could divide up the work of processing every row of a &lt;code class=&quot;highlighter-rouge&quot;&gt;kind&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution&lt;/h2&gt;
&lt;p&gt;I have written a system that lets you (probabilistically) process every entity of a &lt;code class=&quot;highlighter-rouge&quot;&gt;kind&lt;/code&gt;. It does not hard guarantee that every entity will be processed, but with a sufficient number of retries it does probabilistically guarantee that they after entity has been processed.&lt;/p&gt;

&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;scan(
  '&amp;lt;kind&amp;gt;', # the Datastore kind that you want to scan
  retries=1, # a non negative integer, default 1
  retry-fx=lambda i: i**2, # i is the retry count, i=0 is always immediate
  max-retries=2, # a non negative integer, default 2
)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;handler-path&lt;/code&gt; will be called with the &lt;code class=&quot;highlighter-rouge&quot;&gt;urlsafe()&lt;/code&gt; key of every entity of &lt;code class=&quot;highlighter-rouge&quot;&gt;'kind'&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;kind&amp;gt;&lt;/code&gt;. Specifically &lt;code class=&quot;highlighter-rouge&quot;&gt;/&amp;lt;handler-path&amp;gt;/&amp;lt;urlsafekey&amp;gt;&lt;/code&gt; will be called for every &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;kind&amp;gt;&lt;/code&gt; entity. If &lt;code class=&quot;highlighter-rouge&quot;&gt;handler-path&lt;/code&gt; returns 2xx, it is considered a success; otherwise it is a failure. Failure will cause the task to be re-enqueued in &lt;code class=&quot;highlighter-rouge&quot;&gt;retry-fx(retry-count)&lt;/code&gt; seconds.&lt;/p&gt;

&lt;h2 id=&quot;example&quot;&gt;Example&lt;/h2&gt;

&lt;p&gt;Assume there are 3 Dog entities in the database with urlsafekey’s of &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;rottweiler&quot;&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;poodle&quot;&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;dalmation&quot;&lt;/code&gt;. Then,&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;from scanner import scan
scan('Dog', &quot;/add/pedigree&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;will cause the following endpoints to be called.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/add/pedigree/rottweiler&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/add/pedigree/poodle&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/add/pedigree/dalmation&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This isn’t much of a big deal when we are talking about 3 entities. But it is pretty useful when we are talking about thousands or millions of entities. Thanks to this “soft scan” we have the ability to have a function (a endpoint) called on every item of a particular kind in the datastore.&lt;/p&gt;
</description>
        <pubDate>Sun, 15 Jan 2017 00:00:00 -0800</pubDate>
        <link>http://samedhi.github.io/code/2017/01/15/soft-scan-on-google-app-engine.html</link>
        <guid isPermaLink="true">http://samedhi.github.io/code/2017/01/15/soft-scan-on-google-app-engine.html</guid>
        
        
        <category>code</category>
        
      </item>
    
      <item>
        <title>Convert Datastore Into Elasticsearch</title>
        <description>&lt;p&gt;This week I wrote an addition to
&lt;a href=&quot;https://github.com/samedhi/gaend&quot;&gt;gaend&lt;/a&gt; that automatically causes every &lt;code class=&quot;highlighter-rouge&quot;&gt;ndb.Model&lt;/code&gt; entity to automagically be persisted to &lt;a href=&quot;https://www.elastic.co/products/elasticsearch&quot;&gt;Elasticsearch&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;why&quot;&gt;Why?&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://cloud.google.com/datastore/docs/concepts/overview&quot;&gt;Datastore&lt;/a&gt; (the database technology that powers Google App Engine) has a number of great features.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;It scales to like forever&lt;/li&gt;
  &lt;li&gt;With GAE, you can do complex validation on every write&lt;/li&gt;
  &lt;li&gt;Automatically applied security, upgrades, scaling, partitioning, etc.&lt;/li&gt;
  &lt;li&gt;It is pretty simple&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Although datastore is perfect as a Key/Value store that allows transactions and limited queries, it does have its limitations.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;It does not allow SCAN&lt;/li&gt;
  &lt;li&gt;It does not allow JOIN&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;One effect of these limits is that it can difficult to do things like aggregation on tables. You should use the proper tool for the desired outcome.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Datastore is great as a key/value store (with transactions).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Elasticsearch is great at doing aggregation.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Datastore is structured (typed) data. Everything that goes into Elasticsearch must be JSON data. Structured data can be fairly easily transformed into JSON data. You see where I am going with this?&lt;/p&gt;

&lt;h2 id=&quot;nuance&quot;&gt;Nuance&lt;/h2&gt;

&lt;p&gt;This extension to &lt;a href=&quot;https://github.com/samedhi/gaend&quot;&gt;gaend&lt;/a&gt; does successfully convert any Datastore data into Elasticsearch. You should look at your table in Datastore and perhaps consider whether you need to submit a custom &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping.html&quot;&gt;mapping&lt;/a&gt; for Elasticsearch. If unspecified, Elasticsearch will generate a mapping for you based on the submitted JSON document. For tables made up of “primitive” data, the dynamically generated mapping is usually sufficient. Still, know that you can override the dynamic in the event that you have complex, deeply nested, or large types of data.&lt;/p&gt;
</description>
        <pubDate>Sun, 08 Jan 2017 00:00:00 -0800</pubDate>
        <link>http://samedhi.github.io/code/2017/01/08/convert-datastore-into-elasticsearch.html</link>
        <guid isPermaLink="true">http://samedhi.github.io/code/2017/01/08/convert-datastore-into-elasticsearch.html</guid>
        
        
        <category>code</category>
        
      </item>
    
  </channel>
</rss>
